<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{pageTitle}}</title>

    <!-- For linking the css we need to pass the path to the css such that we are inside the css folder since we grant access to that folder through express. The request for the middleware is handled by the static middleware and it forwards the request to the public folder. -->
    <link rel="stylesheet" href="/css/main.css">
</head>

<body>
    <header class="main-header">
        <nav class="main-header_nav">
            <ul class="main-header_item-list">
                <li class="main-header_item"><a class="active" href="/">Shop</a></li>
                <li class="main-header_item"><a href="/admin/add-product">Add product</a></li>
            </ul>
        </nav>
    </header>

    <main>
        <!-- 
            Following is an if helper and we write it in curly brackets.
            
            We also need to add a hashtag for special block statement. 
            
            Block statements are simply the statements which are not just outputting some text but which actually wraps some content that should be output conditionally or in a loop.

            Indentation doesn't matter but makes the code more readible.

            We will get an error if we use 'prods.length>0' since handlebars doesn't support the statements like this, it only supports the output of keys that yield true or false.

            So we need to move this condition to our js file and consider it from there.

            In handlebars we can't run any logic in our handlebars template we just can output single property, single variables and their value and we can only use these in if blocks.

            Also this property of handlebars forces us to put all the logic into the node express code rather than our templates.

            We can loop through an array using each block statement.

            And we can access an array element using the this keyword which refers to the element in the array for the current iteration.

        -->

        {{#if hasProducts}}
            <div class="grid">
                {{#each prods}}
                    <article class="card product-item">
                        <header class="card__header">
                            <h1 class="product__title">{{this.title}}</h1>
                        </header>
                        <div class="card__image">
                            <img src="{{this.image}}" alt="A Book">
                        </div>
                        <div class="card__content">
                            <h2 class="product__price">{{this.price}}</h2>
                            <p class="product__description">{{this.description}}
                            </p>
                        </div>
                        <div class="card__actions">
                            <button class="btn">Add to Cart</button>
                        </div>
                    </article>
                {{/each}}
            </div>
        {{else}}
        <h1>My products</h1>
        <p>List of all the products.....</p>
        {{/if}}
    </main>
</body>

</html>